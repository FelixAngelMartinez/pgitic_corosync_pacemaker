- name: Aprovisionar máquinas
  hosts: all
  remote_user: vagrant
  become: yes
  tasks:
  - include_vars: ./vars/main.yml
  - name: Instalar paquetes necesarios
    apt:
      update_cache: yes
      force_apt_get: yes
      name: "{{ item }}"
    loop:
      - nginx
      - libqb0
      - fence-agents
      - pacemaker
      - corosync
      - firewalld
  
  - name: Iniciar y habilitar el servicio firewalld
    service:
      name: firewalld
      state: started
      enabled: yes

  # Con firewalld habilitamos los puertos, y si hay algún cambio reiniciamos el servicio
  - name: Habilitar puertos 5404, 5405 y 5406 udp
    firewalld:
      port: 5404-5406/udp
      permanent: yes
      immediate: yes
      state: enabled
  
  - name: Reiniciar el servicio firewalld
    service:
      name: firewalld
      state: restarted
  
  # Si los puertos no están abiertos el módulo fallará
  - name: Verificar que los puertos están abiertos
    command: firewall-cmd --list-ports
    register: opened_ports
    failed_when: "'5404-5406/udp' not in opened_ports.stdout"

  - name: Instalar paquete haveged
    apt:
      force_apt_get: yes
      name: haveged
  
  - name: Generar la clave de autenticación corosync
    command: corosync-keygen

  - name: Desinstalar paquete haveged
    apt:
      force_apt_get: yes
      autoclean: yes
      name: haveged
      state: absent

  - name: Descargamos authkey del master en local
    fetch:
      src: /etc/corosync/authkey
      dest: templates/authkey
      flat: yes

  - name: Copiamos authkey de local al servidor secundario en /tmp
    copy:
      src: templates/authkey
      dest: /etc/corosync/
      owner: root
      mode: 400

  - name: Modificamos el fichero de configuración de corosync desde plantilla .j2
    template:
      src: ./templates/corosync.j2
      dest: /etc/corosync/corosync.conf

  - name: Creamos el fichero pcmk desde plantilla
    template:
      src: ./templates/pacemaker.conf
      dest: /etc/corosync/service.d/pcmk

  - name: Cambiar linea de configuración para iniciar corosync
    lineinfile:
      path: /etc/default/corosync
      regexp: '^START='
      line: 'Start=yes'

  - name: Iniciar el servicio corosync
    service:
      name: corosync
      state: started

  


  